name: Auto Create Branch and PR for Issues

on:
  issues:
    types: [opened, assigned]

jobs:
  create-branch-and-pr:
    runs-on: ubuntu-latest
    # Only run if issue has certain labels or is assigned
    if: |
      github.event.issue.assignee != null ||
      contains(github.event.issue.labels.*.name, 'auto-pr') ||
      contains(github.event.issue.labels.*.name, 'feature') ||
      contains(github.event.issue.labels.*.name, 'bug')

    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create branch name
        id: branch
        run: |
          # Create branch name from issue number and title
          ISSUE_NUMBER=${{ github.event.issue.number }}
          ISSUE_TITLE="${{ github.event.issue.title }}"
          # Clean title: lowercase, replace spaces with hyphens, remove special chars
          CLEAN_TITLE=$(echo "$ISSUE_TITLE" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/-/g' | sed 's/--*/-/g' | sed 's/^-//' | sed 's/-$//' | cut -c1-50)
          BRANCH_NAME="issue-${ISSUE_NUMBER}-${CLEAN_TITLE}"
          echo "name=${BRANCH_NAME}" >> $GITHUB_OUTPUT

      - name: Create and push branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Create new branch from main
          git checkout -b ${{ steps.branch.outputs.name }}

          # Create initial file to track the issue
          mkdir -p .github/issue-tracking
          cat > .github/issue-tracking/issue-${{ github.event.issue.number }}.md << 'EOF'
          # Issue #${{ github.event.issue.number }}: ${{ github.event.issue.title }}

          **Issue URL**: ${{ github.event.issue.html_url }}
          **Created**: ${{ github.event.issue.created_at }}
          **Assignee**: ${{ github.event.issue.assignee.login || 'Unassigned' }}

          ## Description
          ${{ github.event.issue.body }}

          ## Work Log
          - Branch created: ${{ steps.branch.outputs.name }}
          - [ ] Implementation
          - [ ] Tests
          - [ ] Documentation
          EOF

          git add .
          git commit -m "🎯 Start work on issue #${{ github.event.issue.number }}

          - Create branch for: ${{ github.event.issue.title }}
          - Issue: ${{ github.event.issue.html_url }}

          Co-authored-by: ${{ github.event.issue.user.login }} <${{ github.event.issue.user.id }}+${{ github.event.issue.user.login }}@users.noreply.github.com>"

          git push origin ${{ steps.branch.outputs.name }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.branch.outputs.name }}
          base: main
          title: "WIP: ${{ github.event.issue.title }} (#${{ github.event.issue.number }})"
          body: |
            ## 🎯 Addresses #${{ github.event.issue.number }}

            ### Description
            ${{ github.event.issue.body }}

            ### Checklist
            - [ ] Implementation complete
            - [ ] Tests added/updated
            - [ ] Documentation updated
            - [ ] Code review completed
            - [ ] CI/CD passing

            ### Type of Change
            - [ ] 🐛 Bug fix
            - [ ] ✨ New feature
            - [ ] 💔 Breaking change
            - [ ] 📝 Documentation
            - [ ] ♻️ Refactoring
            - [ ] 🎨 Style/UI

            ---
            Closes #${{ github.event.issue.number }}
          draft: true
          labels: |
            work-in-progress
            issue-${{ github.event.issue.number }}

      - name: Comment on Issue
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            🚀 **Development branch and PR created automatically!**

            - **Branch**: `${{ steps.branch.outputs.name }}`
            - **Pull Request**: Created as draft PR

            You can now start working on this issue by:
            ```bash
            git fetch origin
            git checkout ${{ steps.branch.outputs.name }}
            ```

            The PR will be linked to this issue and will auto-close it when merged.